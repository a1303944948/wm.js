功能列表： ['一:元素选择器','二:元素操作','三:方法封装','四:ajax请求','五:功能块','六:框架式方法封装']

一：元素选择器		ID选择器，class选择器，name选择器，query选择器
	1：ID选择器    	d('id');   	传入一个元素ID		必传
	2：class选择器 	c('class') 	传入一个class名称	必传
	3：name选择器  	n('name')  	传入一个name名称	必传
	4：query选择器  qll('string')	传入一个任意CSS选择器	必传

二：元素操作		元素创建，添加事件
	1：元素创建	creat('div')		传入一个需要被创建的元素名称 必传
	2：添加事件	Add(dom,even,method)	为指定元素添加一个事件
		a：dom		该参数传入一个dom元素
		b：even	 	该参数需传入事件如‘click’无需加入on
		c：method	该参数为要执行的方法function(){};

三：方法封装		弹窗提醒，加载事件，加载事件清除回调，打印封装，获取URL参数方法
	1：弹窗提醒	alern(text,name,btn,btns)
		a：text 该参数为弹窗提示文（不传默认弹出为空）	 	非必传
		b：name 该参数为弹窗顶部名称（不传默认为‘温馨提醒’）	非必传
		c：btn	该参数为确定按钮文字（不传或传空默认为‘确定’）非必传
		d：btns	该参数为取消按钮文字（不传咋不显示按钮，传空默认为‘取消’）非必传
	2：加载事件	loading(text)传入一个加载时的文本文字不传默认为加载中文本
	3：加载事件被调用后必须执行回调loadingClear（）来清除加载事件产生的残余，否则将影响页面性能
	4：打印封装		log(),dir()  等价于console.log(),console.dir();
	5：获取URL参数方法	getUrlVal（name） 传入一个参数名，获取URL参数方法。

四：ajax请求		ajax
	1：ajax（type，url，data，succ，error，json，async）
		a：type传入一个post或者get来定义此次请求类型			必传
		b：url传入一个请求的url链接					必传
		c：data作用为要传递的数据  基础格式为（a='123'&b='456'&c=）	必传
		d：succ为function（）{}意思为当请求成功时返回的事件		必传
		e：error为function（）{}意思为当请求失败时返回的事件		必传
		f：json为传入一个‘json’是否将返回数据转换为json数据		非必传
		g：async为传入一个true或者false，意思为异步或者是同步请求	非必传

五：功能块		阻止浏览器默认事件，批量给元素添加innerHTML，给元素添加批量样式，批量设置className，批量append元素，批量修改样式
	1：BlockDefault（） 阻止浏览器默认事件
	2：setHTML（bomArr，objArr）	js中批量给元素添加innerHTML方法封装
		a：bomArr传入一个dom集合
		b：objArr传入一个被添加的数据集合
	3：setStyle（dom，json）	js中批量给元素添加样式的方法
		a：dom需传入一个dom元素
		b：json为需要传入的css键值对数组 例：{borderRadius:'5px',border:'1px red solid'}（name部分需采用驼峰式命名，value部分无需驼峰命名）
	4：setClass(domArr,objArr)	js中批量设置className方法 示例：setClass([dom1,dom2,dom3],['class1','class2','class3']);
		a：domArr	传入一个dom集合
		b：objArr	传入class命名集合
	5：setAppend(dom,arr)	批量append元素的方法	示例：setAppend(dom1,[item1,item2,item3,item4]);
		a：dom		传入一个dom元素
		b：arr		传要被添加的元素集合
	6：setStyleX(text)js中批量修改样式的方法封装(主要用于页面准备样式添加)	此方法为js预添加css样式，作者为了不需要额外引入css文件而创建的方法，禁止私自调用
		text传入一个css文本字符串，按照源生css写法就行（禁止私自调用该方法）;

六：框架式方法封装	基础下拉框，复选下拉框，日期(时间)选择器，分页功能
	1：WmStartSelect()	基础下拉框
		调用该方法前需要在页面上加入input框class为wm_select并且拥有自定义属性data-select的元素如下(可同时应用多个选择框，最后调用即可);
		<input class="wm_select" data-select="[{name: '急件',value: 1},{name: '非急件',value: 0}]" type="text"/>
	2：WmCheckSelect()	复选下拉框 暂未投入使用，故无文档，带作者使用过后完善该部分
	3：WmStartDatapicker()	日期(时间)选择器封装 尚在开发中...
	4：WmPageMark()		分页功能
		调用该方法钱需要在页面上加入如下div：
		<div id="page_mark" class="wm_pagemark" data-length="[0,1,20]" data-width="" data-height=""></div>	id自取，方便取值时使用
			a：data-length		[0,1,20]其中0为列表总数量，1为当前页码，20为每页的数量	必传：少一个都不行
			b：data-width		定义该控件的宽度，不传默认为480px，请自行选择合适自己的宽度使用，必须携带单位例如500px	非必传
			c：data-height		定义该控件的高度，不传默认为40px，请自行选择合适自己的高度使用，必须携带单位例如40px	非必传
		并且需要在JS中创建方法如下：
		WmPageMarkStart()	此方法是为给class为wm_pagemark元素执行更改列表总数量以及渲染相关dom方法，单页面支持多个分页同时存在
			注：WmPageMark()方法应该在该方法内在列表总数量被成功更改后被调用
